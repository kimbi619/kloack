version: '3.3'

services:
  db:
    image: "postgres:14-alpine"
    container_name: "postgres"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=prodigy
      - POSTGRES_DB=keycloak
    ports:
      - "5433:5432"
    restart: always

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.1
    container_name: "keycloak"
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://db:5432/keycloak
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=prodigy
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HOSTNAME=172.105.75.119
      - KC_HTTP_RELATIVE_PATH=/auth
      - KC_PROXY=edge
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
    command:
      - start-dev
    ports:
      - "8080:8080"
    depends_on:
      - db
    restart: always
      
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: "backend"
    command: >
      sh -c "python run.py migrate &&
      python run.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=prodigy
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - KEYCLOAK_URL=http://keycloak:8080/auth
      - KEYCLOAK_REALM=kloack
      - KEYCLOAK_CLIENT_ID=backend-service
      - KEYCLOAK_CLIENT_SECRET=lxsFEPWDeW9gM8NvCX1DISuFNWQeHOIK
    depends_on:
      - db
      - keycloak
    restart: always

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: "client"
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_BACKEND_URL=https://172.105.75.119/api
      - REACT_APP_KEYCLOAK_URL=https://172.105.75.119/auth
      - REACT_APP_KEYCLOAK_REALM=kloack
      - REACT_APP_KEYCLOAK_CLIENT_ID=backend-service
    depends_on:
      - backend
      - keycloak
    restart: always
    command: sh -c "npm install && npm start"

  nginx:
    image: nginx:alpine
    container_name: "nginx"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - keycloak
      - backend
      - frontend
    restart: always

volumes:
  postgres_data:
